// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240110201755_AddComponentEntities")]
    partial class AddComponentEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Data.ComputerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComputerType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("TEXT")
                        .HasColumnName("manufacture_date");

                    b.Property<int>("GraphicsCardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StorageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GraphicsCardId");

                    b.HasIndex("ProcessorId");

                    b.HasIndex("StorageId");

                    b.ToTable("computers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComputerType = 2,
                            DateOfManufacture = new DateTime(2023, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GraphicsCardId = 1,
                            Manufacturer = "SaradaManu",
                            Name = "Beast 3X8",
                            ProcessorId = 1,
                            StorageId = 1
                        },
                        new
                        {
                            Id = 2,
                            ComputerType = 4,
                            DateOfManufacture = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GraphicsCardId = 2,
                            Manufacturer = "AlbinoPC",
                            Name = "Workload B30",
                            ProcessorId = 2,
                            StorageId = 2
                        });
                });

            modelBuilder.Entity("Data.GraphicsCardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Memory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("graphics_cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Memory = 12,
                            Name = "GeForce RTX 4070"
                        },
                        new
                        {
                            Id = 2,
                            Memory = 8,
                            Name = "Radeon RX 6600"
                        });
                });

            modelBuilder.Entity("Data.ProcessorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CacheSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoreCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("processors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CacheSize = 24,
                            CoreCount = 14,
                            Name = "Intel Core i5-13600K"
                        },
                        new
                        {
                            Id = 2,
                            CacheSize = 35,
                            CoreCount = 6,
                            Name = "AMD Ryzen 5 3600"
                        });
                });

            modelBuilder.Entity("Data.StorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("storages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ADATA Ultimate SU650",
                            Size = 1000,
                            Type = "SSD"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SAMSUNG 980",
                            Size = 500,
                            Type = "SSD"
                        });
                });

            modelBuilder.Entity("Data.ComputerEntity", b =>
                {
                    b.HasOne("Data.GraphicsCardEntity", "GraphicsCard")
                        .WithMany("Computers")
                        .HasForeignKey("GraphicsCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ProcessorEntity", "Processor")
                        .WithMany("Computers")
                        .HasForeignKey("ProcessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.StorageEntity", "Storage")
                        .WithMany("Computers")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GraphicsCard");

                    b.Navigation("Processor");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("Data.GraphicsCardEntity", b =>
                {
                    b.Navigation("Computers");
                });

            modelBuilder.Entity("Data.ProcessorEntity", b =>
                {
                    b.Navigation("Computers");
                });

            modelBuilder.Entity("Data.StorageEntity", b =>
                {
                    b.Navigation("Computers");
                });
#pragma warning restore 612, 618
        }
    }
}
